{"version":3,"sources":["components/Navigation/index.tsx","components/Navigation/Navigation.tsx","pages/Home/Home.tsx","components/Loader/Loader.tsx","components/PersonLink/index.tsx","components/PersonLink/PersonLink.tsx","components/PeopleItem/index.tsx","components/PeopleItem/PeopleItem.tsx","api.ts","components/PeopleList/PeopleList.tsx","components/PeopleList/index.tsx","pages/People/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","classNames","to","Home","Loader","PersonLink","person","setSelectedPerson","name","sex","slug","onClick","PeopleItem","selectedPerson","findParrent","born","died","fatherName","motherName","style","pointerEvents","color","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleList","setOnLoad","setServerError","setPeopleLength","useState","people","setPeople","parentName","find","useEffect","value","length","catch","finally","map","PeoplPage","onLoad","serverError","peopleLength","warning","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ba3f9bea.chunk.js","sourcesContent":["import { Navigation } from './Navigation';\n\nexport default Navigation;\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const Home = () => {\n  return (\n\n    <h1 className=\"title\">Home Page</h1>\n\n  );\n};\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import { PersonLink } from './PersonLink';\n\nexport default PersonLink;\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ninterface Props {\n  person: Person;\n  setSelectedPerson: (str: string) => void;\n}\n\nexport const PersonLink: FC<Props> = ({ person, setSelectedPerson }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n      onClick={() => setSelectedPerson(slug)}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { PeopleItem } from './PeopleItem';\n\nexport default PeopleItem;\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport PersonLink from '../PersonLink';\n\ninterface Props {\n  person: Person;\n  selectedPerson: string;\n  setSelectedPerson: (str: string) => void;\n  findParrent: (str: string) => string | undefined;\n}\n\nexport const PeopleItem: FC<Props> = ({\n  person,\n  selectedPerson,\n  findParrent,\n  setSelectedPerson,\n}) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === selectedPerson },\n      )}\n    >\n      <td>\n        <PersonLink\n          person={person}\n          setSelectedPerson={setSelectedPerson}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        <NavLink\n          to={`/people/${findParrent(motherName || '-')}`}\n          style={findParrent(motherName || '-')\n            ? { pointerEvents: 'visible' }\n            : { pointerEvents: 'none', color: 'gray' }}\n          className={classNames({\n            'has-text-danger': findParrent(motherName || '-'),\n          })}\n          onClick={() => setSelectedPerson(\n            findParrent(motherName || '-') || '',\n          )}\n        >\n          {motherName || '-'}\n        </NavLink>\n      </td>\n      <td>\n        <NavLink\n          to={`/people/${findParrent(fatherName || '-')}`}\n          style={findParrent(fatherName || '-')\n            ? { pointerEvents: 'visible' }\n            : { pointerEvents: 'none', color: 'gray' }}\n          onClick={() => setSelectedPerson(\n            findParrent(fatherName || '-') || '',\n          )}\n        >\n          {fatherName || '-'}\n        </NavLink>\n      </td>\n    </tr>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, useEffect, useState } from 'react';\nimport PeopleItem from '../PeopleItem';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\n\ninterface Props {\n  setOnLoad: (state: boolean) => void;\n  setServerError: (state: boolean) => void;\n  setPeopleLength: (state: number) => void;\n}\n\nexport const PeopleList: FC<Props> = ({\n  setOnLoad,\n  setServerError,\n  setPeopleLength,\n}) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [selectedPerson, setSelectedPerson] = useState('');\n\n  const findParrent = (parentName: string) => {\n    return (people.find(person => person.name === parentName))?.slug;\n  };\n\n  useEffect(() => {\n    setOnLoad(true);\n\n    getPeople()\n      .then(value => {\n        setPeople(value);\n        setPeopleLength(value.length);\n      })\n      .catch(() => setServerError(true))\n      .finally(() => setOnLoad(false));\n  }, [people.length]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <PeopleItem\n            key={person.slug}\n            person={person}\n            selectedPerson={selectedPerson}\n            setSelectedPerson={setSelectedPerson}\n            findParrent={findParrent}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { PeopleList } from './PeopleList';\n\nexport default PeopleList;\n","import { useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport PeopleList from '../../components/PeopleList';\n\nexport const PeoplPage = () => {\n  const [onLoad, setOnLoad] = useState(true);\n  const [serverError, setServerError] = useState(false);\n  const [peopleLength, setPeopleLength] = useState(1);\n\n  const warning = onLoad || serverError || peopleLength === 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleList\n        setOnLoad={setOnLoad}\n        setServerError={setServerError}\n        setPeopleLength={setPeopleLength}\n      />\n\n      {warning\n        && (\n          <div className=\"block\">\n            <div className=\"box table-container\">\n\n              {onLoad && <Loader />}\n\n              {serverError\n                && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n              {peopleLength === 0\n                && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n            </div>\n          </div>\n        )}\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport Navigation from './components/Navigation';\n\nimport './App.scss';\nimport { Home } from './pages/Home/Home';\nimport { PeoplPage } from './pages/People/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<Home />}\n            />\n\n            <Route\n              path=\"people\"\n              element={<PeoplPage />}\n            >\n              <Route\n                path=\":personSlug\"\n                element={<PeoplPage />}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}